pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/BENJEO2002/Benjeoportfolio.git'
        DOCKER_IMAGE = 'benjeoportfolio'
        DOCKER_CONTAINER_NAME = 'benjeoportfolio_container'
        APP_PORT = '9090' // Host port to avoid conflict with Jenkins
    }

    tools {
        maven 'maven'
    }

    stages {
        stage('Pull Source Code') {
            steps {
                echo 'Cloning the GitHub repository...'
                git branch: 'main', url: "${REPO_URL}"
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project using Maven...'
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building the Docker image...'
                sh 'docker build -t ${DOCKER_IMAGE}:latest .'
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                echo 'Running Ansible playbook to deploy the Docker container...'
                sh 'ansible-playbook -i inventory deploy-docker.yml'
            }
        }
    }
}



Dockerfile


# Use the Tomcat base image
FROM tomcat:9.0-jdk11

# Set the maintainer
LABEL maintainer="benjeo@example.com"

# Copy the WAR file to the Tomcat webapps directory
COPY target/Benjeoportfolio.war /usr/local/tomcat/webapps/Benjeoportfolio.war

# Expose the Tomcat default port
EXPOSE 8080

# Run Tomcat server
CMD ["catalina.sh", "run"]



playbook (deploy-docker.yml )

---
- name: Deploy Docker Container
  hosts: all
  become: true

  tasks:
    - name: Pull the Docker image
      docker_image:
        name: benjeoportfolio
        tag: latest
        source: local  # Uses the image built by Jenkins

    - name: Stop and remove the existing container if it exists
      docker_container:
        name: benjeoportfolio_container
        state: absent

    - name: Run the Docker container
      docker_container:
        name: benjeoportfolio_container
        image: benjeoportfolio:latest
        state: started
        ports:
          - "9090:8080"  # Host:Container port mapping
        restart_policy: always




inventory
[all]
localhost ansible_connection=local

